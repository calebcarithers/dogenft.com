{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x4c16D9032560600Db5Bd1211965a2982be7e0fEA",
    "txHash": "0xd51e79186a6c639fb35afaab2e95c129abfb6f2974e8726983162830ccefe5cb"
  },
  "proxies": [
    {
      "address": "0x95959432293943D77Ed3e2eA065E9D65A21d0227",
      "txHash": "0x0b3e755643daae04cd90904391bde25943aab719d28789d2db37703e8e3bffca",
      "kind": "transparent"
    },
    {
      "address": "0x1FE48305EC26142B1335F6B016fC7017e67f427C",
      "txHash": "0xc29689532195dca1477d179698d465cb0324cb4a91ed2ce6ccf0f627e984d4f6",
      "kind": "transparent"
    },
    {
      "address": "0xE84394F1C62dEc9aA2fA3fe71aAc82C67802583f",
      "txHash": "0x4c49300400d74e7865bcef0cb4893b7b5ec58a8140006331ec6431bbc1607d8b",
      "kind": "transparent"
    },
    {
      "address": "0xeEDE729562218104f806722D74AF7aBC5f86443c",
      "txHash": "0x65115c6fb0db410bb554f8e580986e279ec74091870baeccfb0d9bfd88cf77ee",
      "kind": "transparent"
    },
    {
      "address": "0xf00f388450c816636266A6DA98EDFF5c244Bd5cd",
      "txHash": "0x97317df66b59877351f8ebb77262473a132b4219f8399fcc21a587656f0569ab",
      "kind": "transparent"
    },
    {
      "address": "0x028e2d212aD55C09E47B22f9324d91A0C465Bb2c",
      "txHash": "0xfd716161e3ef407813de89ad0530a914e5790e51f8a3d494892fa8b699eaee1b",
      "kind": "transparent"
    },
    {
      "address": "0x5b256146cd40820ffCEAc9329f4eD35b61a70fe6",
      "txHash": "0xddf89c2e89c68192f20a5a897f66446dda3fdce983af50393b7caefe19158116",
      "kind": "transparent"
    },
    {
      "address": "0x271D91580Bbb6E07E222B7721B348e0AF0367A6F",
      "txHash": "0xc56e7768c135282c3cab1673d7209d41956fa248eb601e205404f22bab1d553c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1fad29157c624443a6e1f1eb7cb39c6ba50b29ee1c5a937737d5178288ba4612": {
      "address": "0xbDDCc0E86564B4A8Eb1df352CFb2B7629488Dd96",
      "txHash": "0x6d8df5fd5d75c295d4dcba0fe3c7fb3e9f7b698a405d95477c87dbd3090a3570",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "301",
            "type": "t_struct(Counter)1803_storage",
            "contract": "Soulbound",
            "src": "contracts/Soulbound.sol:16"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "Soulbound",
            "src": "contracts/Soulbound.sol:18"
          },
          {
            "label": "whitelistClaimed",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Soulbound",
            "src": "contracts/Soulbound.sol:19"
          },
          {
            "label": "baseTokenURIs",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "Soulbound",
            "src": "contracts/Soulbound.sol:21"
          },
          {
            "label": "tokenURITypes",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Soulbound",
            "src": "contracts/Soulbound.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1803_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "26a2992586564c13e5ad9828e200a5d66c9e6a9df7aa5852592057c5463bb55d": {
      "address": "0x18E6AE6D828089F0e5C40540e8CEE43d95E2a7C8",
      "txHash": "0xc4eaa2eee7d589148dc125c60a8bb4687eb276b357c4d5dd0b7d04e7c41edbd1",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "sandboxAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "SandboxDrop",
            "src": "contracts/SandboxDrop.sol:18"
          },
          {
            "label": "isClaimOpen",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "SandboxDrop",
            "src": "contracts/SandboxDrop.sol:19"
          },
          {
            "label": "availableTokenIds",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "SandboxDrop",
            "src": "contracts/SandboxDrop.sol:20"
          },
          {
            "label": "isTokenIdAvailable",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "SandboxDrop",
            "src": "contracts/SandboxDrop.sol:21"
          },
          {
            "label": "whitelistClaimed",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SandboxDrop",
            "src": "contracts/SandboxDrop.sol:22"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "105",
            "type": "t_bytes32",
            "contract": "SandboxDrop",
            "src": "contracts/SandboxDrop.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4c5ee988b86b2f8bac5987643948268b22e697af3dc00fd259ea1ce35a615114": {
      "address": "0x329d49446DfE915238975CEee46A5f282D887805",
      "txHash": "0xdd57ec18631370c73a838d41004e26fa48d780cdc22c436eb027ec763c7b8e6c",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "RainbowClaim",
            "src": "contracts/RainbowClaim.sol:19"
          },
          {
            "label": "pixelAddress",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "RainbowClaim",
            "src": "contracts/RainbowClaim.sol:20"
          },
          {
            "label": "pixelIds",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "RainbowClaim",
            "src": "contracts/RainbowClaim.sol:21"
          },
          {
            "label": "addressHasClaimed",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RainbowClaim",
            "src": "contracts/RainbowClaim.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "58b22a0e9ba732b5857be17d52b68ba5e845125529350f70ba31de3b4bb898f8": {
      "address": "0x0dC74D69B91BD0b97c9fb3775dBfC189a2AfcDb2",
      "txHash": "0x4a079043dce0d890f19840ea38315096fb935290a3493f80451297842d65b765",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "RainbowClaim",
            "src": "contracts/RainbowClaim.sol:19"
          },
          {
            "label": "pixelAddress",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "RainbowClaim",
            "src": "contracts/RainbowClaim.sol:20"
          },
          {
            "label": "pixelIds",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "RainbowClaim",
            "src": "contracts/RainbowClaim.sol:21"
          },
          {
            "label": "addressHasClaimed",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RainbowClaim",
            "src": "contracts/RainbowClaim.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6be3b420106daae1c84f74e150c9adba0126126ec106732b0ba96db165b90928": {
      "address": "0x19Ebc3D01AE6fF1fab998cC2063D388A3A4f8847",
      "txHash": "0x922df382e7829695a8aacd561bf5454eaf9742b23c5d1f695267b3c356ff9542",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "RainbowClaim",
            "src": "contracts/RainbowClaim.sol:17"
          },
          {
            "label": "pixelAddress",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "RainbowClaim",
            "src": "contracts/RainbowClaim.sol:18"
          },
          {
            "label": "pixelIds",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "RainbowClaim",
            "src": "contracts/RainbowClaim.sol:19"
          },
          {
            "label": "addressHasClaimed",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RainbowClaim",
            "src": "contracts/RainbowClaim.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2edad3c1c4a72f95511d905d214cb72bb4a38d8012a89dd274302d8a1c9df788": {
      "address": "0x7636c70321a52aE8B0480cF5eE4EB21096Dcee10",
      "txHash": "0x127ed94cad384c8832dd5b6d5d9ffe9ddb01bac38056706e7b46d0b8afd6e77e",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "RainbowClaimV2",
            "src": "contracts/RainbowClaimV2.sol:17"
          },
          {
            "label": "pixelAddress",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "RainbowClaimV2",
            "src": "contracts/RainbowClaimV2.sol:18"
          },
          {
            "label": "pixelIds",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "RainbowClaimV2",
            "src": "contracts/RainbowClaimV2.sol:19"
          },
          {
            "label": "addressHasClaimed",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RainbowClaimV2",
            "src": "contracts/RainbowClaimV2.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
